// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`css-tag-literal media-queries 1`] = `
"import { css } from 'glamor';

import { $screenWidthMin } from 'styles/variables';

export const myStyles = css({
    fontSize: '2.5rem',
    [\`@media (min-width: \${$screenWidthMin})\`]: {
        fontSize: '1.75rem'
    }
});

export const myStyles2 = css({
    fontSize: '2.5rem',
    '@media (min-width: 768px)': {
        fontSize: '1.75rem'
    }
});"
`;

exports[`css-tag-literal transforms css tag literals into JS objects 1`] = `
"import { css } from 'glamor';

import { $dangerColor, $colorTextLight, $successColor } from 'styles/variables';

const $switchHeight = 28;
const $switchWidth = $switchHeight * 1.8;
const $buttonWidth = 20;
const $delta = ($switchHeight - $buttonWidth) / 2;

export const $switch = css({
    display: 'inline-flex',
    verticalAlign: 'middle',
    height: '34px',
    alignItems: 'flex-end'
});

export const $txtLabel = css({
    verticalAlign: 'top',
    fontSize: '0.875rem',
    lineHeight: '1.5',
    display: 'inline-block',
    padding: '0.275rem'
});

export const $label = css({
    display: 'inline-block',
    position: 'relative',
    cursor: 'pointer',
    outline: 'none',
    userSelect: 'none',
    width: \`\${$switchWidth}px\`,
    margin: '0',
    height: \`\${$switchHeight}px\`,
    backgroundColor: 'transparent',
    borderRadius: '50%',
    '::before': {
        display: 'block',
        position: 'absolute',
        content: '\\"\\"',
        right: '0',
        left: '0',
        bottom: '0',
        top: '0',
        backgroundColor: \`\${$dangerColor}\`,
        borderRadius: \`\${$switchHeight}px\`,
        border: '1px solid #fff',
        transition: 'background 0.4s'
    },
    '::after': {
        display: 'block',
        position: 'absolute',
        content: '\\"\\"',
        width: \`\${$buttonWidth}px\`,
        height: \`\${$buttonWidth}px\`,
        top: \`\${$delta}px\`,
        left: \`\${$delta}px\`,
        backgroundColor: \`\${$colorTextLight}\`,
        borderRadius: \`\${$buttonWidth}px\`,
        transition: 'transform 0.4s'
    }
});

export const $input = css({
    border: '0',
    clip: 'rect(0 0 0 0)',
    height: '1px',
    margin: '-1px',
    overflow: 'hidden',
    padding: '0',
    position: 'absolute',
    width: '1px',
    [\`:checked + .\${$label}::before\`]: {
        backgroundColor: \`\${$successColor}\`
    },
    [\`:checked + .\${$label}::after:\`]: {
        transform: \`translateX(\${$switchWidth - $buttonWidth - 2 * $delta}px)\`
    }
});"
`;
